// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApi.Models;

namespace WebApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20190803181358_hh10")]
    partial class hh10
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApi.Models.Admin", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cin");

                    b.Property<string>("Email");

                    b.Property<string>("Nom");

                    b.Property<string>("Password");

                    b.Property<string>("Prenom");

                    b.Property<string>("Role");

                    b.Property<string>("Telephone");

                    b.HasKey("ID");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("WebApi.Models.Hospital", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdminID");

                    b.Property<string>("Adresse");

                    b.Property<string>("Nom");

                    b.Property<string>("PositionGeographique");

                    b.Property<string>("Ref");

                    b.Property<string>("Region");

                    b.Property<string>("Telephone");

                    b.Property<string>("Ville");

                    b.HasKey("ID");

                    b.HasIndex("AdminID");

                    b.ToTable("Hopitals");
                });

            modelBuilder.Entity("WebApi.Models.Machine", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Available");

                    b.Property<string>("Code");

                    b.Property<string>("ConditionUse");

                    b.Property<DateTime>("DateFabrication");

                    b.Property<DateTime>("DatePurchase");

                    b.Property<string>("FrequencyUsage");

                    b.Property<int>("HospitalID");

                    b.Property<DateTime>("LastDateUse");

                    b.Property<string>("NatureDiseaseTreat");

                    b.Property<string>("Nom");

                    b.Property<double>("prixPurchase");

                    b.HasKey("ID");

                    b.HasIndex("HospitalID");

                    b.ToTable("Appareils");
                });

            modelBuilder.Entity("WebApi.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("email");

                    b.Property<string>("firstName");

                    b.Property<string>("lastName");

                    b.Property<string>("password");

                    b.Property<string>("token");

                    b.HasKey("ID");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            email = "boutakatmohamed@gmail.com",
                            firstName = "mohamed",
                            lastName = "boutakat",
                            password = "justme"
                        });
                });

            modelBuilder.Entity("WebApi.Models.Hospital", b =>
                {
                    b.HasOne("WebApi.Models.Admin")
                        .WithMany("Hopitals")
                        .HasForeignKey("AdminID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApi.Models.Machine", b =>
                {
                    b.HasOne("WebApi.Models.Hospital")
                        .WithMany("Machines")
                        .HasForeignKey("HospitalID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
